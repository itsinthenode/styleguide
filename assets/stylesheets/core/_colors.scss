// Colors
//
// Color palette
//
// Weight: -99
//
// Markup:
// <div class="nd-color-sample sample1"></div>
// <div class="nd-color-sample sample2"></div>
// <div class="nd-color-sample sample3"></div>
// <div class="nd-color-sample sample4"></div>
// <div class="nd-color-sample sample5"></div>
// <div class="nd-color-sample sample6"></div>
// <div class="nd-color-sample sample7"></div>
// <div class="nd-color-sample sample8"></div>
//
// Style guide: Colors

// nd-color($name)
//
// Sass function that returns specified color hex value from color palette.
//
// Usage:
//
// <pre>
// .my-component {
//   background-color: nd-color("lime");
//   color: nd-color("metal");
// }
// </pre>
//
// $name - Name of the color.
//
// Style guide: Colors.Functions

// nd-color($bgColor, $fontColor)
//
// Sass mixin that sets background color and font color.
//
// Usage:
//
// <pre>
// .my-component {
//   @include nd-color("carbon", "white");
// }
// </pre>
//
// $bgColor - Name of background color.
// $fontColor - Name of font color.
//
// Style guide: Colors.Mixin

$nd-colors: (
  'carbon': #202A37,
  'royal-blue': #2278f1,
  'lime': #2abf00,
  'sky-blue': #cbe6ff,
  'grass': #bbeda2,
  'metal': #888FA8,
  'alarm-red': #e94659,
  'white': #ffffff,
);

@function nd-color($name) {
  @if not map-has-key($nd-colors, $name) {
    @error "Invalid color specified! Choose one of #{map-keys($nd-colors)}";
  } 
  @return map-get($nd-colors, $name);
}

@mixin nd-color($bgColor, $fontColor){
  @if not map-has-key($nd-colors, $bgColor) {
    @error "Invalid color specified for background! Choose one of #{map-keys($nd-colors)}";
  } 
  @if not map-has-key($nd-colors, $fontColor) {
    @error "Invalid color specified for font color! Choose one of #{map-keys($nd-colors)}";
  } 
  background-color: nd-color($bgColor);
  color: nd-color($fontColor);
}

@if $show-samples {
  // generate samples
  .nd-color-sample {
    height: 40px;
    padding-left: 5px;
    line-height: 40px;

    $color-names: map-keys($nd-colors);
    @each $name, $value in $nd-colors {
      &.sample#{index($color-names, $name)} {
        background-color: $value;
        @if (lightness($value) < 60) {
          color: nd-color("white");
        }
        &:after {
          content: "#{$name}: #{$value}";
        }
      }
    }
  }
}

