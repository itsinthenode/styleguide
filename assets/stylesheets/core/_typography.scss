// Typography
//
// Mixins that can be applied to get look for texts.
//
// Weight: -10
//
// Usage:
//
// <pre>
// .my-component {
//   @include typography('primary-headline');
// }
// </pre>
//
// Markup:
// <div class="typography-sample sample1"></div>
// <div class="typography-sample sample2"></div>
// <div class="typography-sample sample3"></div>
// <div class="typography-sample sample4"></div>
// <div class="typography-sample sample5"></div>
//
// Style guide: Core.Hierarchy

$typography-config: (
    "primary-headline": (
        font-size: 20px,
        font-weight: 300,
        color-name: 'carbon',
        letter-spacing: normal,
        text-transformation: none,
        line-height: 1
    ),
    "secondary-headline": (
        font-size: 14px,
        font-weight: 400,
        color-name: 'carbon',
        letter-spacing: normal,
        text-transformation: none,
        line-height: 1        
    ),
    "sub-headline": (
        font-size: 14px,
        font-weight: 400,
        color-name: 'metal',
        letter-spacing: normal,
        text-transformation: none,
        line-height: 1       
    ),
    "meta-headline": (
        font-size: 10px,
        font-weight: 400,
        color-name: 'metal',
        letter-spacing: .5px,
        text-transformation: uppercase,
        line-height: 1       
    ),
    "paragraph-text": (
        font-size: 12px,
        font-weight: 400,
        color-name: 'carbon',
        letter-spacing: normal,
        text-transformation: none,
        line-height: 20px        
    )
);

@mixin typography-default {
    font-family: font-family();
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

@mixin typography($style){
    @if not map-has-key($typography-config, $style) {
        @error "Invalid style specified! Choose one of #{map-keys($typography-config)}";
    }
    $style-props: map-get($typography-config , $style);

    @include typography-default;

    font-size: map-get($style-props , "font-size");
    font-weight: map-get($style-props , "font-weight");
    color: color(map-get($style-props , "color-name"));
    letter-spacing: map-get($style-props , "letter-spacing");
    text-transform: map-get($style-props , "text-transformation"); 
    line-height: map-get($style-props , "line-height"); 
}

.typography-sample{
    $style-names: map-keys($typography-config);

    border: 1px solid gray;
    padding: 10px;
    margin-bottom: 5px;

    @each $name in $style-names{
        &.sample#{index($style-names, $name)} {
            @include typography($name);
            &:after {
                content: "#{$name}"
            }
        }
    }
}