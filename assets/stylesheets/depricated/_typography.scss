// Text Styles
//
// TODO: add desktop sizes, use 'rem' values
//
// Usage:
//
// <pre>
// .my-header {
//   @include text-style("display1");
// }
// </pre>
//
// Markup:
// <div class="text-style-sample sample1"></div>
// <div class="text-style-sample sample2"></div>
// <div class="text-style-sample sample3"></div>
// <div class="text-style-sample sample4"></div>
// <div class="text-style-sample sample5"></div>
// <div class="text-style-sample sample6"></div>
// <div class="text-style-sample sample7"></div>
// <div class="text-style-sample sample8"></div>
// <div class="text-style-sample sample9"></div>
// <div class="text-style-sample sample10"></div>
// <div class="text-style-sample sample11"></div>
// <div class="text-style-sample sample12"></div>
//
// Style guide: Depricated.Text Styles


// font weights Roboto
// thin: 100
// light: 300       (used)
// normal: 400      (used)
// medium: 500      (used)
// bold: 700
// ultra-bold: 900

$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-regular: $font-weight-normal;
$font-weight-medium: 500;

// text styles
//
// color should be color("black") if not specified otherwise

$text-styles: (
  display4: (
    font-size: 112px,
    font-weight: $font-weight-light
  ),

  display3: (
    font-size: 56px,
    font-weight: $font-weight-regular
  ),

  display2: (
    font-size: 45px,
    font-weight: $font-weight-regular
  ),

  display1: (
    font-size: 34px,
    font-weight: $font-weight-medium
  ),

  headline: (
    font-size: 24px,
    font-weight: $font-weight-regular
  ),

  title: (
    font-size: 20px,
    font-weight: $font-weight-medium
  ),

  subheading: (
    font-size: 16px,
    font-weight: $font-weight-regular
  ),

  //choice,
  placeholder: (
    font-size: 14px, // is 16px in sketch
    font-weight: $font-weight-light,
    color: color("grey")
  ),

  body2: (
    font-size: 14px,
    font-weight: $font-weight-medium,
    color: color("grey-dark")
  ),

  body1: (
    font-size: 14px,
    font-weight: $font-weight-regular,
    color: color("black")
  ),

  caption: (
    font-size: 12px,
    font-weight: $font-weight-regular
  ),

  detail: (
    font-size: 10px,
    font-weight: $font-weight-medium,
    color: color("grey-dark")
  )
);

// generate placeholder classes
// (please don't use directly)
@each $name, $styles in $text-styles {
  %text-style-#{$name} {
    @each $key, $value in $styles {
      #{$key}: #{$value};
    }
  }
}


// use the mixin to set the text style
@mixin text-style($name, $extend: true) {
  @if map-has-key($text-styles, $name) {
    @if $extend {
      // extend placeholder style
      @extend %text-style-#{$name};
    } @else {
      // mixin the values
      @each $key, $value in map-get($text-styles, $name) {
        #{$key}: #{$value};
      }
    }
  } @else {
    @warn "Text style `#{$name}` not found.";
  }
}


// generate sampls
.text-style-sample {
  $text-style-names: map-keys($text-styles);
  @each $name, $_ in $text-styles {
    &.sample#{index($text-style-names, $name)} {
      @include text-style($name);
      &:after {
        content: "#{$name}";
      }
    }
  }
}
